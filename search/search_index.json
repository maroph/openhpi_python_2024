{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"openHPI Python Kurs","text":"<p>Auf dieser Site habe ich meine L\u00f6sungen zu den Aufgaben des openHPI Kurses Python \u2013 schnell und intensiv Programmieren lernen, gesammelt.</p> <p>Wie meistens, gibt es in der Regel mehrere m\u00f6gliche L\u00f6sungen f\u00fcr ein Problem. Deshalb sind meine L\u00f6sungen auch nur Beispiele f\u00fcr eine m\u00f6gliche L\u00f6sung. Die meisten L\u00f6sungen sind nur soweit auscodiert, dass die CodeOcean Testumgebung mit der L\u00f6sung zufrieden ist.</p> <p>F\u00fcr die Ausf\u00fchrung des Codes habe ich Python 3.11 verwendet. Die verwendete Python Version kann man mit dem Programm version.py ausgeben.</p> <p></p>"},{"location":"info.html","title":"Info","text":"<p>Infos \u00fcber diese Site.</p>"},{"location":"python.html","title":"Python","text":"<p>Infos zu verschiedenen Python Themen.</p>"},{"location":"info/about.html","title":"\u00dcber diese Site","text":"<p>Vom 2. Oktober 2024 bis 29. Oktober 2024 l\u00e4uft der openHPI Kurs Python \u2013 schnell und intensiv Programmieren lernen.</p> <p>Auf dieser Site habe ich meine Beispiell\u00f6sungen zu den Aufgaben abgelegt.</p> <p>Die L\u00f6sungen sind im Verzeichnis  sources abgelegt. Alle L\u00f6sungen sind lokal (also ohne die  openHPI CodeOcean Umgebung) ablauff\u00e4hig.</p> <p>Hinweis: es sind nur m\u00f6gliche L\u00f6sungen. Es gibt meistens mehrere (auch elegantere) M\u00f6glichkeiten, die Aufgaben zu l\u00f6sen.</p> <p>Die Aufgaben habe ich mit Python 3.11 erstellt und auf einem Windows 10 und einem Debian 12.1 System getestet. </p> <p>Die verwendete Python Version kann man mit dem Programm  version.py  ausgeben.</p> <pre><code>Debian:\n$ python3 version.py\n3.11.2 (main, Mar 13 2023, 12:18:29) [GCC 12.2.0]\nsys.version_info(major=3, minor=11, micro=2, releaselevel='final', serial=0)\nmajor        : 3\nminor        : 11\nmicro        : 2\nreleaselevel : final\nserial       : 0\n</code></pre> <pre><code>Windows 11:\n&gt; python.exe version.py\n3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]\nsys.version_info(major=3, minor=11, micro=7, releaselevel='final', serial=0)\nmajor        : 3\nminor        : 11\nmicro        : 7\nreleaselevel : final\nserial       : 0\n</code></pre>"},{"location":"info/about.html#struktur-der-site","title":"Struktur der Site","text":"<p>Der gesamte Inhalt dieser Site (HTML und Python Source Code) ist abgelegt in meinem GitHub Repository maroph/openhpi_python_2024:</p> <ul> <li>docs   Markdown Sourcen dieser Site</li> <li>sources   Python Source Code der Aufgaben aus Woche 1 bis 4</li> <li>LICENSE   Lizenz des Repositories (CC-BY 4.0)</li> <li>README.md   Readme Datei des Repositories</li> <li>mkdocs.yml MkDocs Konfigurationsdatei</li> </ul> <p>Die Webseiten aus den Markdown Dateien erzeuge ich mit dem MkDocs Static Site Generator. Die erzeugten Webseiten werden im Verzeichnis site abgelegt.</p>"},{"location":"info/about.html#mein-python-virtual-environment","title":"Mein Python Virtual Environment","text":"<p>Zur Erzeugung der Webseiten verwende ich die folgenden Python Module</p> <ul> <li>mkdocs-material   Das Modul mkdocs wird dabei mitinstalliert.</li> <li>mkdocs-git-revision-date-localized-plugin</li> </ul> <p>F\u00fcr die ben\u00f6tigten Python Module verwende ich das folgende Virtual Environment:</p> <pre><code>python3 -m venv venv\nsource venv/bin/activate\npython -m pip install --upgrade pip\npython -m pip install --upgrade setuptools\npython -m pip install --upgrade wheel\npython -m pip install --upgrade mkdocs-material\npython -m pip install --upgrade mkdocs-git-revision-date-localized-plugin\n</code></pre> <p>Sollte das Modul pip und/oder venv nicht installiert sein, muss man das entsprechende Package installieren.</p> <p>Auf einem Debian System geht das mit dem folgenden Kommando</p> <pre><code>sudo apt install python3-pip\nsudo apt install python3-venv\n</code></pre> <p>Hinweis: einige Beispiele im Verzeichnis sources/extras verwenden das Modul requests: </p> <pre><code>python -m pip install --upgrade requests\n</code></pre> <ul> <li>Das Python favicon im Verzeichnis  assets ist von der Site favicon.cc</li> <li>Die Python Logo Datei ist eine verkleinerte Version der Datei  python-logo-only.png.</li> </ul>"},{"location":"info/gdpr.html","title":"GDPR / DSGVO","text":""},{"location":"info/gdpr.html#global-data-protection-regulation-gdpr","title":"Global Data Protection Regulation (GDPR)","text":"<p>This website does not collect, store or process personally identifiable  information (PII). This website does not require the use of cookies.</p>"},{"location":"info/gdpr.html#datenschutzerklarung-dsgvo","title":"Datenschutzerkl\u00e4rung (DSGVO)","text":"<p>Auf dieser Webseite werden keine personenbezogenen Daten erhoben, gespeichert  oder verarbeitet. Es werden keine Cookies verwendet.</p>"},{"location":"info/gdpr.html#third-part-inclusion","title":"Third Part Inclusion","text":"<p>This website is hosted by GitHub  using GitHub Pages. The GitHub Global Privacy Practices are available  here.</p>"},{"location":"info/gdpr.html#verweise-auf-dritte","title":"Verweise auf Dritte","text":"<p>Diese Website wird auf GitHub als GitHub Pages  gehostet. Die  GitHub Global Privacy Practices sind  hier  hinterlegt.</p>"},{"location":"info/license.html","title":"Lizenz","text":"<p> Die Daten auf dieser Site sind lizenziert unter einer Creative Commons Namensnennung 4.0 International Lizenz</p> <p> Die Aufgabentexte des openHPI Python Kurses wurden vom openHPI Kurs Team erstellt und sind lizenziert unter einer Creative Commons Namensnennung - Nicht-kommerziell - Weitergabe unter gleichen Bedingungen 4.0 International Lizenz</p>"},{"location":"python/dictionary.html","title":"Dictionary","text":"<p>Ein Dictionary speichert seinen Inhalt in Key/Value (Schl\u00fcssel/Wert) Paaren ab. Der  Datentyp der Werte kann beliebig sein. \u00c4hnliches gilt f\u00fcr die Schl\u00fcssel, jedoch muss der Datentyp unver\u00e4nderbar sein (int, float, String, Tuple, ...).  Der  Zugriff auf die Values erfolgt dabei \u00fcber den Key und nicht, wie bei Listen, \u00fcber einen Index.</p> <p>Bis einschlie\u00dflich der Python Version 3.6 gab es f\u00fcr die Key/Value Paare eines Dictionaries keine feste Reihenfolge. D.h.: hat man in einer for Schleife (Beispiele siehe weiter unten) \u00fcber die Keys eines Dictionaries iteriert, hing die Reihenfolge der Keys von der verwendeten Python Implementierung ab. Seit der Python Version 3.7 sind Dictionaries ordered, d.h. die Key/Value Paare werden in einer festen Reihenfolge ausgegeben. Die  Reihenfolge richtet sich nach dem Zeitpunkt, zu dem sie in das Dictionary eingestellt  wurden.</p>"},{"location":"python/dictionary.html#anlegen-eines-dictionaries","title":"Anlegen eines Dictionaries","text":"<p>Man kann entweder ein leeres Dictionary anlegen</p> <pre><code>dict = {}\n</code></pre> <p>oder das Dictionary gleich mit Inhalt anlegen</p> <pre><code>dict = {\"key1\": \"val1\", \"key2\": \"val2\"}\n</code></pre>"},{"location":"python/dictionary.html#zugriff-auf-einen-wert-im-dicitonary","title":"Zugriff auf einen Wert im Dicitonary","text":"<p>Auf die Werte im Dictionary wird mit dem Schl\u00fcssel zugegriffen:</p> <pre><code>value = dict[\"key\"]\n</code></pre>"},{"location":"python/dictionary.html#zugriff-auf-einen-wert-im-dictionary-auch-wenn-der-key-nicht-existiert","title":"Zugriff auf einen Wert im Dictionary - auch wenn der Key nicht existiert","text":"<p>Greift man auf einen Key zu, den es im Dictionary nicht gibt, kommte es im Python Runtime System zu einem KeyError. Dieses Problem kann man mit der Methode get vermeiden</p> <pre><code>value = dict.get(key, default_value)\n</code></pre> <p>Ist der Key nicht im Dictionary, wird der angegebene Defaultwert zur\u00fcckgegeben.</p> <pre><code>value = dict.get(key)\n</code></pre> <p>Ist der Key nicht im Dictionary, wird None zur\u00fcckgegeben.</p>"},{"location":"python/dictionary.html#defaultdict","title":"defaultdict","text":"<p>Statt jedes Mal beim Aufruf von get einen Defaultwert mitzu\u00fcbergeben, kann man auch die Klasse  defaultdict verwenden.</p> <pre><code>from collections import defaultdict\n\ndef default_value():\n    return None\n\nd = defaultdict(default_value, dict)\nvalue = d.get(key)\n</code></pre> <p>Wir jetzt beim Aufruf von get ein Key verwendet, der nicht im Dictionary abgelegt ist, wird kein KeyError erzeugt, sondern es wird der Wert, den die Funktion default_value zur\u00fcckgibt (im Beispiel None) zur\u00fcckgegeben.</p>"},{"location":"python/dictionary.html#ein-keyvalue-paar-zum-dictionary-hinzufugen","title":"Ein Key/Value Paar zum Dictionary hinzuf\u00fcgen:","text":"<pre><code>dict[\"key\"] = \"value\"\n</code></pre>"},{"location":"python/dictionary.html#ein-keyvalue-paar-auf-einem-dictionray-loschen","title":"Ein Key/Value Paar auf einem Dictionray l\u00f6schen","text":"<pre><code>del(dict[\"key2\"])\n</code></pre>"},{"location":"python/dictionary.html#loschen-und-lesen","title":"L\u00f6schen und lesen","text":"<pre><code>value = dict.pop(\"key2\")\n</code></pre>"},{"location":"python/dictionary.html#anzahl-der-keyvalue-paare-in-einem-dictionary","title":"Anzahl der Key/Value Paare in einem Dictionary","text":"<pre><code>len(dict)\n</code></pre>"},{"location":"python/dictionary.html#abfragen-ob-ein-key-in-einem-dictionary-enthalten-ist","title":"Abfragen ob ein Key in einem Dictionary enthalten ist","text":"<pre><code>if \"key1\" in dict:\n    print(\"gefunden, Wert: \", dict[\"key1\"])\n</code></pre>"},{"location":"python/dictionary.html#abfragen-ob-ein-key-nicht-in-einem-dictionary-enthalten-ist","title":"Abfragen ob ein Key nicht in einem Dictionary enthalten ist","text":"<pre><code>if \"key1\" not in dict:\n    print(\"nicht gefunden\")\n</code></pre>"},{"location":"python/dictionary.html#alle-keys-aus-einem-dictionary-lesen","title":"Alle Keys aus einem Dictionary lesen","text":"<pre><code>for key in dict:\n    print(key)\n</code></pre> <p>Oder</p> <pre><code>for key in dict.keys():\n    print(key)\n</code></pre>"},{"location":"python/dictionary.html#alle-keys-in-einer-liste-speichern","title":"Alle Keys in einer Liste speichern","text":"<pre><code>liste = list(dict.keys())\n</code></pre>"},{"location":"python/dictionary.html#alle-values-aus-einem-dictionary-lesen","title":"Alle Values aus einem Dictionary lesen","text":"<pre><code>for key in dict:\n    print(dict[key])\n</code></pre> <p>Oder </p> <pre><code>for value in dict.values():\n    print(value)\n</code></pre>"},{"location":"python/dictionary.html#alle-values-in-einer-liste-speichern","title":"Alle Values in einer Liste speichern","text":"<pre><code>liste = list(dict.values())\n</code></pre>"},{"location":"python/dictionary.html#alle-keyvalue-paare-aus-einem-dictionary-lesen","title":"Alle Key/Value Paare aus einem Dictionary lesen","text":""},{"location":"python/dictionary.html#jedes-paar-als-tuple","title":"Jedes Paar als Tuple","text":"<pre><code>for item in dict.items():\n    print(item[0], item[1])\n</code></pre>"},{"location":"python/dictionary.html#alles-paare-in-einer-liste-speichern","title":"Alles Paare in einer Liste speichern","text":"<pre><code>liste = list(dict.items())\n</code></pre>"},{"location":"python/dictionary.html#jedes-paar-als-einzelne-werte-key-value","title":"Jedes Paar als einzelne Werte: key, value","text":"<pre><code>for key, value in dict.items():\n    print(key, value)\n</code></pre>"},{"location":"python/dictionary.html#inhalt-eines-dictionaries-loschen","title":"Inhalt eines Dictionaries l\u00f6schen","text":"<pre><code>dict.clear()\n</code></pre>"},{"location":"python/dictionary.html#dictionary-kopieren","title":"Dictionary kopieren","text":"<pre><code>dict_copy = dict.copy()\n</code></pre>"},{"location":"python/dictionary.html#einfugen-eines-dictionaries","title":"Einf\u00fcgen eines Dictionaries","text":"<pre><code>dict.update(dict2)\n</code></pre> <p>Alle Key/Value Paare aus dem Dictionary dict2 werden in das Dictionay dict eingef\u00fcgt. Ist der Key bereits in  dict enthalten, wird der Wert durch den Wert aus dem Dictionary dict2 ersetzt.</p>"},{"location":"python/dictionary.html#weiterfuhrende-links","title":"Weiterf\u00fchrende Links","text":"<ul> <li>Defaultdict in Python</li> <li>How to Iterate Through a Dictionary in Python</li> <li>Python-Kurs: Dictionaries</li> </ul>"},{"location":"python/links.html","title":"Links","text":""},{"location":"python/links.html#openhpi-kurse","title":"openHPI Kurse","text":"<ul> <li>2023: Programmieren lernen mit Python</li> <li>2023: Programmieren lernen mit Python - Schulversion</li> <li>2020: Programmieren lernen mit Python</li> <li>2015: Spielend Programmieren lernen!</li> </ul>"},{"location":"python/links.html#python","title":"Python","text":"<ul> <li>Python</li> <li>Python Docs</li> <li>Python Styleguide</li> <li>Python Glossary</li> <li>PyPi - Python Package Index</li> <li>PIP - pip installs packages</li> <li>Python Source Code</li> <li>PyInstaller   Wandelt Python Anwendungen in ausf\u00fchrbare Programme um</li> <li>Typangaben in Python</li> <li>Idiomatic Python: EAFP versus LBYL</li> <li>Python Docstrings</li> <li>Python Scope &amp; the LEGB Rule: Resolving Names in Your Code</li> <li>Pass by Reference in Python: Background and Best Practices</li> <li>Object-Oriented Programming (OOP) in Python 3</li> <li>How to Round Numbers in Python</li> <li>How to Sort Unicode Strings Alphabetically in Python</li> <li>GUI Programming With PyQt</li> <li>What Are Python Asterisk and Slash Special Parameters For?</li> </ul>"},{"location":"python/links.html#tutorialsbucher","title":"Tutorials/B\u00fccher","text":"<ul> <li>Dive Into Python 3</li> <li>Python 3 Tutorial</li> <li>Python 3 - Das umfassende Handbuch</li> <li>Python-Kurs <ul> <li>Python Tutorial</li> <li>Python und OOP</li> <li>Python Fortgeschritten</li> <li>Python Anwendungen</li> <li>Numerisches Programmieren mit Python</li> <li>Maschinelles Lernen mit Python</li> <li>Python Tkinter</li> </ul> </li> <li>Python Projekte</li> <li>Real Python Tutorials</li> <li>SQLite Python</li> <li>The Python Tutorial</li> <li>The Python turtle Tutorial</li> </ul>"},{"location":"python/links.html#python-kurse","title":"Python Kurse","text":"<ul> <li>edX   Interaktive Kurse von Universit\u00e4ten wie Stanford, Harvard oder Berkeley.</li> <li>Coursera    Gro\u00dfe Auswahl an Kursen, die teilweise jederzeit belegbar sind.</li> <li>CodeAcademy   Viele weiterf\u00fchrende Kurse zu Themen wie Datenanalyse oder -visualisierung    in Python.</li> <li>freeCodeCamp   Gro\u00dfe Anzahl von (nicht nur Python) Kursen.</li> <li>FutureLearn   Bietet eine Reihe von Python Kursen, die in der Regel f\u00fcr Anf\u00e4nger/Einsteiger    gedacht sind.</li> <li>udemy    Tutorialreihe zu ein- und weiterf\u00fchrenden Themen an.</li> <li>w3schools   Tutorialreihe zu ein- und weiterf\u00fchrenden Themen an.</li> </ul>"},{"location":"python/links.html#aufgabensammlungen","title":"Aufgabensammlungen","text":"<ul> <li>Advent of Code   \"Advent of Code is an Advent calendar of small programming puzzles for a variety of skill sets and skill levels that can be solved in any programming language you like.\"</li> <li>Project Euler   \"Project Euler is a series of challenging mathematical/computer programming problems that will require more than just mathematical insights to solve.\"    Siehe auch     Wikipedia: Project Euler</li> </ul>"},{"location":"python/links.html#ides","title":"IDEs","text":"<ul> <li>Eclipse PyDev</li> <li>Geany</li> <li>IDLE   Teil der Python Distribution</li> <li>PyCharm   Die Community Editon kann man kostenlos verwenden.</li> <li>Spyder</li> <li>Sublime Text 3</li> <li>Thonny</li> <li>Visual Studio Code</li> <li>VSCodium   Open Source Version von Visual Studio Code ohne    Microsoft Branding/Telemetry/Lizensierung</li> <li>Wing Python IDE </li> </ul>"},{"location":"python/links.html#online-ides","title":"Online IDEs","text":"<ul> <li>Cloud9 IDE</li> <li>Colaboratory</li> <li>Python Code Editor</li> <li>Python Fiddle</li> <li>Python Tutor</li> <li>Programiz</li> <li>Python on repl.it</li> </ul>"},{"location":"python/listen.html","title":"Listen","text":"<p>Eine Liste ist eine Sammlung von Elementen, die in einer festen Reihenfolge abgelegt werden. Der Datentyp der Elemente kann beliebig sein. Der Zugriff erfolgt  \u00fcber den Index, der die Position des Elements in der Liste bestimmt. Indizes  beginnen mit 0 und nicht mit 1!</p>"},{"location":"python/listen.html#anlegen-einer-liste","title":"Anlegen einer Liste","text":"<p>Man kann entweder ein leere Liste anlegen</p> <pre><code>liste = []\n</code></pre> <p>oder die Liste gleich mit Inhalt anlegen</p> <pre><code>liste = [\"val1\", \"val2\"]\n</code></pre>"},{"location":"python/listen.html#zugriff-auf-einen-wert-in-einer-liste","title":"Zugriff auf einen Wert in einer Liste","text":"<p>Auf die Werte in Liste wird mit dem Index zugegriffen:</p> <pre><code>value1 = liste[0] # erstes Element\nvalue2 = liste[1] # zweites Element\n</code></pre>"},{"location":"python/listen.html#zugriff-auf-das-letztevorletzte-element-einer-liste","title":"Zugriff auf das letzte/vorletzte/... Element einer Liste:","text":"<pre><code>value = liste[-1] # letztes Element\nvalue = liste[-2] # vorletztes Element\n...\n</code></pre>"},{"location":"python/listen.html#zugriff-auf-eine-index-bereich-in-einer-liste","title":"Zugriff auf eine (Index-) Bereich in einer Liste","text":"<p>Hier einige Beispiele:</p> <pre><code>&gt;&gt;&gt; liste = [i for i in range(1, 11)]\n&gt;&gt;&gt; print(liste)\n[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n&gt;&gt;&gt; print(liste[1:3])\n[2, 3]\n&gt;&gt;&gt; print(liste[1:])\n[2, 3, 4, 5, 6, 7, 8, 9, 10]\n&gt;&gt;&gt; print(liste[5:-1])\n[6, 7, 8, 9]\n[2, 3, 4, 5, 6, 7, 8, 9, 10]\n</code></pre>"},{"location":"python/listen.html#ein-wert-am-ende-der-liste-hinzufugen","title":"Ein Wert am Ende der Liste hinzuf\u00fcgen","text":"<pre><code>liste.append(\"val3\")\n</code></pre>"},{"location":"python/listen.html#einen-wert-in-eine-liste-einfugen","title":"Einen Wert in eine Liste einf\u00fcgen:","text":"<pre><code>liste.insert(idx, value)\n</code></pre>"},{"location":"python/listen.html#einen-wert-liste-loschen","title":"Einen Wert Liste l\u00f6schen","text":"<pre><code>liste.remove(idx)\n</code></pre>"},{"location":"python/listen.html#einen-wert-lesen-und-aus-der-liste-loschen","title":"Einen Wert lesen und aus der Liste l\u00f6schen","text":"<pre><code>value = liste.pop(idx)\n</code></pre>"},{"location":"python/listen.html#eine-liste-an-eine-liste-anhangen","title":"Eine Liste an eine Liste anh\u00e4ngen:","text":"<pre><code>liste.extend(liste2)\n</code></pre>"},{"location":"python/listen.html#ein-wert-aus-einer-liste-loschen","title":"Ein Wert aus einer Liste l\u00f6schen","text":"<pre><code>del(liste[idx])\n</code></pre>"},{"location":"python/listen.html#anzahl-der-werte-in-einer-liste","title":"Anzahl der Werte in einer Liste","text":"<pre><code>len(liste)\n</code></pre>"},{"location":"python/listen.html#abfragen-ob-ein-wert-in-einer-liste-enthalten-ist","title":"Abfragen ob ein Wert in einer Liste enthalten ist","text":"<pre><code>if \"val1\" in liste:\n    print(\"gefunden\")\n</code></pre>"},{"location":"python/listen.html#abfragen-ob-ein-wert-nicht-in-einer-liste-enthalten-ist","title":"Abfragen ob ein Wert nicht in einer Liste enthalten ist","text":"<pre><code>if \"val1\" not in liste:\n    print(\"nicht gefunden\")\n</code></pre>"},{"location":"python/listen.html#alle-werte-aus-einer-liste-lesen","title":"Alle Werte aus einer Liste lesen","text":"<pre><code>for value in liste:\n    print(value)\n</code></pre>"},{"location":"python/listen.html#alle-werte-aus-einer-liste-lesen-und-loschen","title":"Alle Werte aus einer Liste lesen und l\u00f6schen","text":"<p>Mit dieser naheliegenden for Schleife l\u00e4sst sich das Problem leider nicht l\u00f6sen :-(</p> <pre><code>for value in liste:\n    print(value)\n    liste.pop(0)\n</code></pre> <p>Denn: es wird einerseits implizit ein Iterator benutzt, um alle Elemente der Liste  nacheinander zu bekommen und zum anderen wird direkt auf der Liste operiert.</p> <p>Man kann hierzu eine while Schleife verwenden:</p> <pre><code>while (len(liste) &gt; 0):\n    print(liste.pop(0))\n</code></pre> <p>Alternativ kann man auch die folgende for Schleife verwenden:</p> <pre><code>for i in range(len(liste)):\n    print(liste.pop(0))\n</code></pre>"},{"location":"python/listen.html#umkehr-der-reihenfolge-in-einer-liste","title":"Umkehr der Reihenfolge in einer Liste","text":"<pre><code>liste.reverse()\n</code></pre>"},{"location":"python/listen.html#werte-in-einer-liste-sortieren","title":"Werte in einer Liste sortieren","text":"<pre><code>liste.sort()\n</code></pre>"},{"location":"python/listen.html#sortierreihenfolge-umkehren","title":"Sortierreihenfolge umkehren","text":"<pre><code>liste.sort(reverse=True)\n</code></pre>"},{"location":"python/listen.html#weiterfuhrende-links","title":"Weiterf\u00fchrende Links","text":"<ul> <li>Python-Kurs: Listen</li> <li>Python's list Data Type: A Deep Dive With Examples</li> </ul>"},{"location":"python/tuple.html","title":"Tuple - Unver\u00e4nderliche Listen","text":"<p>Tuple verhalten sich genau wie Listen, aber ihr Inhalt kann nicht ver\u00e4ndert werden.</p>"},{"location":"python/tuple.html#anlegen-eines-tuple","title":"Anlegen eines Tuple","text":"<pre><code>tuple = (\"val1\", \"val2\")\n</code></pre>"},{"location":"python/tuple.html#leeres-tuple","title":"Leeres Tuple","text":"<pre><code>tuple = ()\n</code></pre>"},{"location":"python/tuple.html#tuple-mit-einem-element","title":"Tuple mit einem Element","text":"<pre><code>tuple = (\"val1\",)\n</code></pre>"},{"location":"python/tuple.html#zugriff-auf-einen-wert-in-einem-tuple","title":"Zugriff auf einen Wert in einem Tuple","text":"<p>Auf die Werte in einem Tuple wird mit dem Index zugegriffen:</p> <pre><code>value1 = tuple[0]\nvalue2 = tuple[1]\n</code></pre> <p>Achtung: der Index einer Liste f\u00e4ngt immer mit dem Wert 0 an.</p>"},{"location":"python/tuple.html#zugriff-auf-das-letztevorletzte-element-eines-tuple","title":"Zugriff auf das letzte/vorletzte Element eines Tuple:","text":"<pre><code>value = tuple[-1] # letztes Element\nvalue = tuple[-2] # vorletztes Element\n...\n</code></pre>"},{"location":"python/tuple.html#anzahl-der-werte-in-einem-tuple","title":"Anzahl der Werte in einem Tuple","text":"<pre><code>len(tuple)\n</code></pre>"},{"location":"python/tuple.html#abfragen-ob-ein-wert-in-einem-tuple-enthalten-ist","title":"Abfragen ob ein Wert in einem Tuple enthalten ist","text":"<pre><code>if \"val1\" in tuple:\n    print(\"gefunden\")\n</code></pre>"},{"location":"python/tuple.html#abfragen-ob-ein-wert-nicht-in-einem-tuple-enthalten-ist","title":"Abfragen ob ein Wert nicht in einem Tuple enthalten ist","text":"<pre><code>if \"val1\" not in tuple:\n    print(\"nicht gefunden\")\n</code></pre>"},{"location":"python/tuple.html#alle-werte-aus-einem-tuple-lesen","title":"Alle Werte aus einem Tuple lesen","text":"<pre><code>for value in tuple:\n    print(value)\n</code></pre> <p>Ein Tutorial zum Thema Tuple findet man hier:  Python's tuple Data Type: A Deep Dive With Examples</p>"}]}